@model dynamic

@{
    ViewBag.Title = "My Notifications";
}

<section class="content container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-solid">
                <div class="box-body">
                    <div id="notificationList">
                        <script type="text/html" id="notificationListTemplate">
                            <div>
                                <div class="info-box-custom">
                                    <span class="info-box-icon <%= notificationType %>"><i class="<%= notificationIconClass %>"></i></span>

                                    <div class="info-box-content">
                                        <span class="info-box-custom-title"><%= title %></span>
                                        <span class="info-box-custom-minitext"><i class="fa fa-clock-o"></i> <%= moment(createdOn).format('DD/MM/YYYY hh:mm A') %></span>
                                        <span class="info-box-custom-text"><%= message %></span>
                                    </div>
                                    <!-- /.info-box-content -->
                                </div>
                            </div>
                        </script>
                    </div>
                </div>
            </div>

        </div>
    </div>
</section>

@section scripts
{
    <script>
        $(function () {
            DevExpress.setTemplateEngine("underscore");

            var $notificationList = $("#notificationList");
            var $notificationListTemplate = $("#notificationListTemplate");
            var $notificationBell = $('#notifyBellCount');
            var $notificationDropdown = $("#notificationDropdown");

            $notificationList.dxList({
                dataSource: new DevExpress.data.AspNet.createStore({
                    key: "id",
                    loadUrl: window.location.origin + "/api/common/GetMyNotification",
                    deleteUrl: window.location.origin + "/api/common/DeleteMyNotification"
                }),
                itemTemplate: $notificationListTemplate,
                allowItemDeleting: true,
                itemDeleteMode: "static",
                noDataText: "No notification...",
                onItemDeleted: function (e) {
                    if ($notificationBell.text() == "" || $notificationBell.text() == "0" || $notificationBell.text() == "1") {
                        $notificationBell.removeClass("label label-danger").text("");
                    }
                    else {
                        var notifyCount = parseInt($notificationBell.text());
                        $notificationBell.text(notifyCount - 1);
                    }

                    // sync with notification page
                    if ($notificationDropdown.length) {
                        $notificationDropdown.dxList("instance").reload();
                    }
                }
            }).dxList("instance");
        });
    </script>
}

