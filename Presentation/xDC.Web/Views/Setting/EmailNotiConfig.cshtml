@model xDC.Domain.Web.Setting.EmailConfigSetting

@{
    ViewBag.Title = "Notification Configuration";
}

<section class="content container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-danger">
                <div class="box-body">
                    @using (Html.BeginForm())
                    {

                        using (Html.DevExtreme().ValidationGroup())
                        {

                            @Html.AntiForgeryToken()

                            @(Html.DevExtreme().Form<xDC.Domain.Web.Setting.EmailConfigSetting>()
                                .ShowValidationSummary(true)
                                .ColCount(2)
                                .Items(items => {

                                    items.AddGroup()
                                        .Caption("ISSD Related")
                                        .Items(groupItems => {
                                            groupItems.AddTabbed()
                                                        .TabPanelOptions(o => { o.DeferRendering(false); })
                                                        .Tabs(tabItems =>
                                                        {
                                                            tabItems.Add()
                                                                .Title("Trade Settlement")
                                                                .Items(tabItem =>
                                                                {
                                                                    tabItem.AddSimpleFor(m => m.issd_TsCn).Editor(e => e.TextBox()).Label(x => x.Text("Part G (Contribution)")).HelpText("This email used in Part G (Form) under Generate Contribution Email function.");
                                                                    tabItem.AddSimpleFor(m => m.issd_Enable_TsCn).Editor(e => e.Switch()).Label(x => x.Text("Enable"));
                                                                    tabItem.AddSimpleFor(m => m.issd_TsCnCc).Editor(e => e.TextBox()).Label(x => x.Text("CC Part G (Contribution)"));
                                                                    tabItem.AddSimpleFor(m => m.issd_Enable_TsCnCc).Editor(e => e.Switch()).Label(x => x.Text("Enable"));
                                                                    tabItem.AddSimpleFor(m => m.issd_TsPe).Editor(e => e.TextBox()).Label(x => x.Text("Part E (PE)"));
                                                                    tabItem.AddSimpleFor(m => m.issd_Enable_TsPe).Editor(e => e.Switch()).Label(x => x.Text("Enable"));
                                                                    tabItem.AddSimpleFor(m => m.issd_TsPeCc).Editor(e => e.TextBox()).Label(x => x.Text("CC Part E (PE)"));
                                                                    tabItem.AddSimpleFor(m => m.issd_Enable_TsPeCc).Editor(e => e.Switch()).Label(x => x.Text("Enable"));
                                                                    tabItem.AddSimpleFor(m => m.issd_TsProperty).Editor(e => e.TextBox()).Label(x => x.Text("Part H (Property)"));
                                                                    tabItem.AddSimpleFor(m => m.issd_Enable_TsProperty).Editor(e => e.Switch()).Label(x => x.Text("Enable"));
                                                                    tabItem.AddSimpleFor(m => m.issd_TsPropertyCc).Editor(e => e.TextBox()).Label(x => x.Text("CC Part H (Property)"));
                                                                    tabItem.AddSimpleFor(m => m.issd_Enable_TsPropertyCc).Editor(e => e.Switch()).Label(x => x.Text("Enable"));
                                                                    tabItem.AddSimpleFor(m => m.issd_TsLoan).Editor(e => e.TextBox()).Label(x => x.Text("Part H (Loan)"));
                                                                    tabItem.AddSimpleFor(m => m.issd_Enable_TsLoan).Editor(e => e.Switch()).Label(x => x.Text("Enable"));
                                                                    tabItem.AddSimpleFor(m => m.issd_TsLoanCc).Editor(e => e.TextBox()).Label(x => x.Text("CC Part H (Loan)"));
                                                                    tabItem.AddSimpleFor(m => m.issd_Enable_TsLoanCc).Editor(e => e.Switch()).Label(x => x.Text("Enable"));
                                                                });

                                                            tabItems.Add()
                                                                .Title("FCA Tagging")
                                                                .Items(tabItem =>
                                                                {
                                                                    tabItem.AddSimpleFor(m => m.issd_FcaTagging).Editor(e => e.TextBox()).Label(x => x.Text("FCA Tagging Notification"));
                                                                    tabItem.AddSimpleFor(m => m.issd_Enable_FcaTagging).Editor(e => e.Switch()).Label(x => x.Text("Enable FCA Tagging Notification"));
                                                                });

                                                            tabItems.Add()
                                                                .Title("Treasury (with no trades info)")
                                                                .Items(tabItem =>
                                                                {
                                                                    tabItem.AddSimpleFor(m => m.issd_TApproved).Editor(e => e.TextBox()).Label(x => x.Text("Notify on approved"));
                                                                    tabItem.AddSimpleFor(m => m.issd_Enable_TApproved).Editor(e => e.Switch()).Label(x => x.Text("Enable notify on approved"));
                                                                });
                                                        });
                                        });

                                    items.AddGroup()
                                        .Caption("FID Related")
                                        .Items(groupItems =>
                                        {
                                            groupItems.AddTabbed()
                                                        .TabPanelOptions(o => { o.DeferRendering(false); })
                                                        .Tabs(tabItems =>
                                                        {
                                                            tabItems.Add()
                                                                .Title("Trade Settlement")
                                                                .Items(tabItem =>
                                                                {
                                                                    tabItem.AddSimpleFor(m => m.fid_TS_ApprovedCc).Editor(e => e.TextBox()).Label(x => x.Text("CC on approved"));
                                                                    tabItem.AddSimpleFor(m => m.fid_Enable_TS_ApprovedCc).Editor(e => e.Switch()).Label(x => x.Text("Enable CC on approved"));
                                                                });

                                                            tabItems.Add()
                                                                .Title("Treasury Form")
                                                                .Items(tabItem =>
                                                                {
                                                                    tabItem.AddSimpleFor(m => m.fid_T_SubmittedCc).Editor(e => e.TextBox()).Label(x => x.Text("CC on submitted"));
                                                                    tabItem.AddSimpleFor(m => m.fid_Enable_T_SubmittedCc).Editor(e => e.Switch()).Label(x => x.Text("Enable CC on submitted"));
                                                                    tabItem.AddSimpleFor(m => m.fid_T_ApprovedCc).Editor(e => e.TextBox()).Label(x => x.Text("CC on approved"));
                                                                    tabItem.AddSimpleFor(m => m.fid_Enable_T_ApprovedCc).Editor(e => e.Switch()).Label(x => x.Text("Enable CC on approved"));
                                                                });
                                                        });
                                        });

                                    items.AddButton()
                                        .HorizontalAlignment(HorizontalAlignment.Left)
                                        .ButtonOptions(b => b.Text("Save Changes")
                                            .Type(ButtonType.Success)
                                            .UseSubmitBehavior(true)
                                    );

                                })
                                .FormData(Model)
                            )
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts
{
    @Scripts.Render("~/bundles/setting/emailNotificationConfig");
}
